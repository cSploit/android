#! /bin/sh
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2014 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. $SRCDIR/scripts/defines.sh

mkdir -p $TESTDIR $DBDIR1

echo "Starting slapd on TCP/IP port $PORT1..."
. $CONFFILTER $BACKEND $MONITORDB < $PWCONF > $CONF1
$SLAPD -f $CONF1 -h $URI1 -d $LVL $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"

sleep 1

echo "Using ldapsearch to check that slapd is running..."
for i in 0 1 2 3 4 5; do
	$LDAPSEARCH -s base -b "$MONITOR" -h $LOCALHOST -p $PORT1 \
		'objectclass=*' > /dev/null 2>&1
	RC=$?
	if test $RC = 0 ; then
		break
	fi
	echo "Waiting 5 seconds for slapd to start..."
	sleep 5
done

echo "Using ldapadd to populate the database..."
$LDAPADD -D "$MANAGERDN" -h $LOCALHOST -p $PORT1 -w $PASSWD < \
	$LDIFPASSWD > $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldapadd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo > $SEARCHOUT
echo > $TESTOUT

echo "Using ldapsearch to verify population ..."
echo "++ Initial search" >> $SEARCHOUT
$LDAPSEARCH -h $LOCALHOST -p $PORT1 \
	-D "$MANAGERDN" -w $PASSWD \
	-b "$BASEDN" \
	'objectclass=*' >> $SEARCHOUT 2>&1

echo "Using ldappasswd to test a few error conditions ..."
echo "Pass 0" >> $TESTOUT
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w secret -a "" -s newsecret \
	-D "cn=md5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC = 0 ; then
	echo "ldappasswd unexpectantly passed ($RC)! old empty"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit 1
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w secret -a oldsecret -s "" \
	-D "cn=md5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC = 0 ; then
	echo "ldappasswd unexpectantly passed ($RC)! new empty"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit 1
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w secret -a oldsecret -s newsecret \
	-D "cn=md5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC = 0 ; then
	echo "ldappasswd unexpectantly passed ($RC)! wrong old"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit 1
fi

echo "Using ldappasswd (PASS 1)  ..."
echo "Pass 1" >> $TESTOUT
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w secret -s newsecret \
	-D "cn=md5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w $PASSWD -s newsecret \
	-D "$MANAGERDN" "cn=smd5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w secret -s newsecret \
	-D "cn=sha, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w secret -s newsecret \
	-D "cn=ssha, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo "" >> $TESTOUT
echo "Pass 2" >> $TESTOUT
echo "Using ldappasswd (PASS 2)  ..."
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w newsecret \
	-D "cn=md5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w newsecret \
	-D "cn=smd5, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w newsecret \
	-D "cn=sha, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi
$LDAPPASSWD -h $LOCALHOST -p $PORT1 \
	-w newsecret \
	-D "cn=ssha, $BASEDN" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldappasswd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo "Logging end state with ldapsearch..."
echo "" >> $TESTOUT
echo "++ End search" >> $TESTOUT
$LDAPSEARCH -h $LOCALHOST -p $PORT1 \
	-D "$MANAGERDN" -w $PASSWD \
	-b "$BASEDN" \
	'objectclass=*' >> $TESTOUT 2>&1


test $KILLSERVERS != no && kill -HUP $KILLPIDS

echo ">>>>> Test succeeded"

test $KILLSERVERS != no && wait

exit 0
