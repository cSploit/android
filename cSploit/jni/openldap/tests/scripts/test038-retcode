#! /bin/sh
# $Header$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2014 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. $SRCDIR/scripts/defines.sh

if test $RETCODE = retcodeno; then 
	echo "Retcode overlay not available, test skipped"
	exit 0
fi 

mkdir -p $TESTDIR $DBDIR1

echo "Running slapadd to build slapd database..."
. $CONFFILTER $BACKEND $MONITORDB < $MCONF > $ADDCONF
$SLAPADD -f $ADDCONF -l $LDIFORDERED
RC=$?
if test $RC != 0 ; then
	echo "slapadd failed ($RC)!"
	exit $RC
fi

echo "Running slapindex to index slapd database..."
. $CONFFILTER $BACKEND $MONITORDB < $RETCODECONF > $CONF1
$SLAPINDEX -f $CONF1
RC=$?
if test $RC != 0 ; then
	echo "warning: slapindex failed ($RC)"
	echo "  assuming no indexing support"
fi

echo "Starting slapd on TCP/IP port $PORT1..."
$SLAPD -f $CONF1 -h $URI1 -d $LVL $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"

sleep 1

echo "Testing slapd searching..."
for i in 0 1 2 3 4 5; do
	$LDAPSEARCH -s base -b "$MONITOR" -h $LOCALHOST -p $PORT1 \
		'(objectclass=*)' > /dev/null 2>&1
	RC=$?
	if test $RC = 0 ; then
		break
	fi
	echo "Waiting 5 seconds for slapd to start..."
	sleep 5
done

if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo "Testing search for timelimitExceeded..."
$LDAPSEARCH -b "cn=timelimitExceeded,ou=RetCodes,$BASEDN" \
	-h $LOCALHOST -p $PORT1 '(objectClass=*)' >> $TESTOUT 2>&1
RC=$?
if test $RC != 3 ; then
	echo "ldapsearch failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit 1
fi

echo "Testing modify for unwillingToPerform..."
$LDAPMODIFY -D "$MANAGERDN" -w $PASSWD \
	-h $LOCALHOST -p $PORT1 >> $TESTOUT 2>&1 << EOMODS
dn: cn=unwillingToPerform,ou=RetCodes,$BASEDN
changetype: delete
EOMODS
RC=$?
if test $RC != 53 ; then
	echo "ldapmodify failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit 1
fi

echo "Testing compare for success after sleep (2 s)..."
$LDAPCOMPARE -h $LOCALHOST -p $PORT1 \
	"cn=Success w/ Delay,ou=RetCodes,$BASEDN" "cn:foo" >> $TESTOUT 2>&1
RC=$?
if test $RC != 0 ; then
	echo "ldapcompare failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

test $KILLSERVERS != no && kill -HUP $KILLPIDS

echo ">>>>> Test succeeded"

test $KILLSERVERS != no && wait

exit 0
