#! /bin/sh
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2014 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. $SRCDIR/scripts/defines.sh

if test $BACKLDAP = "ldapno" ; then 
	echo "LDAP backend not available, test skipped"
	exit 0
fi 

mkdir -p $TESTDIR $DBDIR1 $DBDIR2 $DBDIR3 $TESTDIR/slapd.d

ITS=4337
ITSDIR=$DATADIR/regressions/its$ITS

echo "Starting slapd on TCP/IP port $PORT1..."
. $CONFFILTER $BACKEND $MONITORDB < $ITSDIR/slapd.conf > $CONF1
#$SLAPD -f $CONF1 -F $TESTDIR/slapd.d -h $URI1 -d $LVL $TIMING > $LOG1 2>&1 &
$SLAPD -f $CONF1 -h $URI1 -d $LVL $TIMING > $LOG1 2>&1 &
PID=$!
if test $WAIT != 0 ; then
    echo PID $PID
    read foo
fi
KILLPIDS="$PID"

sleep 1

echo "Using ldapsearch to check that slapd is running..."
for i in 0 1 2 3 4 5; do
	$LDAPSEARCH -s base -b "$MONITOR" -h $LOCALHOST -p $PORT1 \
		'objectclass=*' > /dev/null 2>&1
	RC=$?
	if test $RC = 0 ; then
		break
	fi
	echo "Waiting 5 seconds for slapd to start..."
	sleep 5
done

if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

cat /dev/null > $TESTOUT
cat /dev/null > $SEARCHOUT

echo "Searching databases..."
echo "# Searching databases __before__ append..." >> $SEARCHOUT
$LDAPSEARCH -h $LOCALHOST -p $PORT1 \
	-D "cn=config" -w "config" -b "cn=config" \
	'(objectClass=olcDatabaseConfig)' >> $SEARCHOUT 2>> $TESTOUT
RC=$?
if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo "Appending a database..."
$LDAPADD -v -D "cn=config" -w "config" -h $LOCALHOST -p $PORT1 \
	>> $TESTOUT 2>&1 << EOMODS
dn: olcDatabase=bdb,cn=config
objectClass: olcDatabaseConfig
objectClass: olcBdbConfig
olcDatabase: bdb
olcSuffix: dc=com
olcDbDirectory: ./testrun/db.1.a
EOMODS
RC=$?
if test $RC != 0 ; then
	echo "ldapadd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo "Searching databases..."
echo "# Searching databases __after__ append..." >> $SEARCHOUT
$LDAPSEARCH -h $LOCALHOST -p $PORT1 \
	-D "cn=config" -w "config" -b "cn=config" \
	'(objectClass=olcDatabaseConfig)' >> $SEARCHOUT 2>> $TESTOUT
RC=$?
if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

echo "Inserting a database..."
$LDAPADD -v -D "cn=config" -w "config" -h $LOCALHOST -p $PORT1 \
	>> $TESTOUT 2>&1 << EOMODS
dn: olcDatabase={1}bdb,cn=config
objectClass: olcDatabaseConfig
objectClass: olcBdbConfig
olcDatabase: {1}bdb
olcSuffix: dc=org
olcDbDirectory: ./testrun/db.2.a
EOMODS
RC=$?
if test $RC != 0 ; then
	echo "ldapadd failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	if test $RC = 53 ; then
		echo "TODO"
		exit 0
	fi
	exit $RC
fi

echo "Searching databases..."
echo "# Searching databases __after__ insert..." >> $SEARCHOUT
$LDAPSEARCH -h $LOCALHOST -p $PORT1 \
	-D "cn=config" -w "config" -b "cn=config" \
	'(objectClass=olcDatabaseConfig)' >> $SEARCHOUT 2>> $TESTOUT
RC=$?
if test $RC != 0 ; then
	echo "ldapsearch failed ($RC)!"
	test $KILLSERVERS != no && kill -HUP $KILLPIDS
	exit $RC
fi

test $KILLSERVERS != no && kill -HUP $KILLPIDS

LDIF=$ITSDIR/config.out

echo "Filtering ldapsearch results..."
$LDIFFILTER < $SEARCHOUT > $SEARCHFLT
echo "Filtering original ldif..."
$LDIFFILTER < $LDIF > $LDIFFLT
echo "Comparing filter output..."
$CMP $SEARCHFLT $LDIFFLT > $CMPOUT

if test $? != 0 ; then
	echo "Comparison failed"
	exit 1
fi

echo ">>>>> Test succeeded"

test $KILLSERVERS != no && wait

exit 0
