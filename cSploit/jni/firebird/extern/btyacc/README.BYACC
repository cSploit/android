    Berkeley Yacc is an LALR(1) parser generator.  Berkeley Yacc has been made
as compatible as possible with AT&T Yacc.  Berkeley Yacc can accept any input
specification that conforms to the AT&T Yacc documentation.  Specifications
that take advantage of undocumented features of AT&T Yacc will probably be
rejected.

    Berkeley Yacc is distributed with no warranty whatever.  The code is certain
to contain errors.  Neither the author nor any contributor takes responsibility
for any consequences of its use.

    Berkeley Yacc is in the public domain.  The data structures and algorithms
used in Berkeley Yacc are all either taken from documents available to the
general public or are inventions of the author.  Anyone may freely distribute
source or binary forms of Berkeley Yacc whether unchanged or modified.
Distributers may charge whatever fees they can obtain for Berkeley Yacc.
Programs generated by Berkeley Yacc may be distributed freely.

    Please report bugs to

			  corbett@berkeley.edu

Include a small example if possible.  Please include the banner string from
skeleton.c with the bug report.  Do not expect rapid responses.

------------------------------------------------------------------------------

	ACKNOWLEDGEMENTS
	================

     Berkeley Yacc owes much to the unflagging efforts of Keith Bostic.
His badgering kept me working on it long after I was ready to quit.

     Berkeley Yacc is based on the excellent algorithm for computing LALR(1)
lookaheads developed by Tom Pennello and Frank DeRemer.  The algorithm is
described in their almost impenetrable article in TOPLAS 4,4.

     Finally, much of the credit for the latest version must go to those
who pointed out deficiencies of my earlier releases.  Among the most
prolific contributors were

	  Benson I. Margulies
	  Dave Gentzel
	  Antoine Verheijen
	  Peter S. Housel
	  Dale Smith
	  Ozan Yigit
	  John Campbell
	  Bill Sommerfeld
	  Paul Hilfinger
	  Gary Bridgewater
	  Dave Bakken
	  Dan Lanciani
	  Richard Sargent
	  Parag Patel

------------------------------------------------------------------------------

The initial idea for BTYACC came to me after reading the paper
	"Parsing Non-LR(k) Grammars with Yacc"
	Gary H. Merrill
	_Software Prctice and Experience_ Vol. 23(8), 829-850
	(August 1993)
this paper talks about the basic idea of using a trial parse to resolve
conflicts in the grammar.

Patches to make things work on MSDOS are courtesy of Pasquale Foggia
